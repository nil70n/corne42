/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    chosen {
        zmk,matrix-transform = &default_transform;
        // zmk,matrix-transform = &five_column_transform;
    };
};


// Behavior Overrides

&mt {
  retro-tap;
  label = "Mod Tap";
  tapping-term-ms = <120>;
  flavor = "tap-preferred";
  bindings = <&kp>, <&kp>;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

// Macros

/ {
  macros {

    mls: macro_layer_shift {
      compatible = "zmk,behavior-macro-one-param";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <1>;
      bindings
        = <&macro_param_1to1>
        , <&macro_press &mo MACRO_PLACEHOLDER &kp LSHFT>
        , <&macro_pause_for_release>
        , <&macro_param_1to1>
        , <&macro_release &mo MACRO_PLACEHOLDER &kp LSHFT>
        ;
    };

  };
};

// Behaviors

/ {
  behaviors {

    // Hold Tap
    htls: hold_tap_layer_shift {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <180>;
        quick-tap-ms = <180>;
        bindings = <&mls>, <&kp>;
    };
    // -------------------------------------

    // Left thumb 2
    t2sc: tap_dance_shift_capsword {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <180>;
      bindings = <&sk LSHFT>, <&caps_word>;
    };

    // Right thumb 3
    t6dn: tap_dance_delete_number {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <180>;
      bindings = <&kp DEL>, <&tog 1>;
    };
    // -------------------------------------

  };
};

// Combos

/ {
  combos {
    compatible = "zmk,combos";

    combo_tab {
      timeout-ms = <50>;
      key-positions = <15 16>;
      bindings = <&kp TAB>;
    };

    combo_sqt {
      timeout-ms = <50>;
      key-positions = <21 22>;
      bindings = <&kp SQT>;
    };

 };
};

/ {
  keymap {
    compatible = "zmk,keymap";
    default_layer {
      bindings = <
&kp ESC  &kp Q &kp W       &kp E        &kp R      &kp T        &kp Y      &kp U      &kp I        &kp O       &kp P    &kp DEL
&kp CAPS &kp A &mt LCTRL S &mt LSHFT D  &mt LGUI F &mt LALT G   &mt RALT H &mt RGUI J &mt RSHFT K  &mt RCTRL L &kp SEMI &kp SQT
&kp LGUI &kp Z &kp X       &kp C        &kp V      &kp B        &kp N      &kp M      &kp COMMA    &kp DOT     &kp FSLH &kp BSLH
                        &tog 2    &t2sc      &lt 3 SPACE    &lt 3 RET  &kp BSPC   &tog 1
      >;
    };

    number_layer {
      bindings = <
&kp ESC   &kp N1    &kp N2          &kp N3           &kp N4        &kp N5           &kp N6        &kp N7         &kp N8       &kp N9          &kp N0   &kp EQUAL
&kp CAPS  &kp MINUS &mt LCTRL EQUAL &mt LSHFT LBKT   &mt LGUI RBKT &mt LALT GRAVE   &mt RALT LEFT &mt RGUI DOWN  &mt RSHFT UP &mt RCTRL RIGHT &kp SEMI &kp MINUS
&kp LGUI  &none     &none           &kp INS          &kp PSCRN     &kp K_APP        &kp HOME      &kp PG_DN      &kp PG_UP    &kp END         &kp FSLH &kp BSLH
                        &trans    &trans      &trans    &trans  &trans   &trans
      >;
    };

    symbol_layer {
      bindings = <
&kp F1  &kp F2        &kp F3        &kp F4     &kp F5      &kp F6       &kp F7      &kp F8   &kp F9    &kp F10   &kp F11    &kp F12
&none   &none         &kp LCTRL     &kp LSHFT  &kp LGUI    &kp LALT     &kp RALT    &kp RGUI &kp RSHFT &kp RCTRL &none      &none
&trans   &trans  &trans  &kp K_COPY &kp K_PASTE &trans   &trans  &trans    &trans     &trans     &trans &trans
                        &trans    &trans      &trans    &trans  &trans   &trans
      >;
    };

    control_layer {
      bindings = <
&sys_reset &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &sys_reset
&bt BT_CLR &out OUT_USB &out OUT_BLE &trans &bt BT_NXT &bt BT_PRV &bt BT_PRV &bt BT_NXT &trans &out OUT_BLE &out OUT_USB &bt BT_CLR
&bootloader &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &bootloader
                        &trans    &trans      &trans    &trans  &trans   &trans
      >;
    };
  };
};
